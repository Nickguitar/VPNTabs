#!/bin/bash
# Nicholas Ferreira - github.com/Nickguitar
# Gabriel Belli - github.com/gabrielbelli
# 12/10/21

port=3128
tor_port=9050
tor=0

green="\033[0;32m"
red="\033[0;31m"
orange="\033[0;33m"
white="\033[1;37m"
reset="\033[0m"

checkdocker(){
	if [ ! `which docker` ]; then
		echo -e "${red}[-] You must have docker installed. See: https://docs.docker.com/engine/install/${reset}"
		exit
	fi
}


banner(){
	echo -e "\033[0;33m"
	echo "ICAgICBfX18KICAgICAiLl9gLS4gICAgICAgICAoXC0uCiAgICAgICAgJy0uYDsuLS0uX19fLyBfYD4KICAgICAgICAgICBgIiggKSAgICAsICkgCiAgICAgICAgICAgICAgXFwtLS0tXC1c" | base64 -d
	echo -e "\033[0m\n               VPN Tabs\n"
	echo -e "        Use \033[0;33mFirefox\033[0m container\n            tabs with VPN\n  Nicholas Ferreira & Gabriel Belli\n"
}

banner

help_banner(){
	echo -e "Usage:\n\n - Build image:\n$0 --build\n\n - Run container:\n$0 --run <OPENVPN FILE> [--port <PORT>] [--name <CONTAINER NAME>]\n"
	echo "Options:"
	echo "   -h, --help				See this help message"
	echo "   -b, --build				Build the docker image"
	echo "   -l, --list				List containers"
	echo "   -n, --name <NAME>			Container name (optional)"
	echo "   -p, --port <PORT>			Proxy port (default: 3128)"
	echo "   -r, --run <FILE>			Run the docker container with the specified file"
	echo "   -t, --tor 				Run the docker container with TOR Proxy"
	echo "   --delete <CONTAINER NAME|ID>		Delete container"
	echo "   --start <CONTAINER NAME|ID>		Start a container"
	echo "   --stop <CONTAINER NAME|ID>		Stop a container"
	echo ""
	echo "Usage examples:"
	echo " $ $0 --build					Build the image"
	echo " $ $0 -r us2957.nordvpn.com -n Nord_US		Run the container w/ NordVPN config file"
	echo " $ $0 -r --tor --name tor 			Run the container w/ tor"
	echo ""
	exit
}

checkport(){
	if [[ ! "$1" =~ ^[0-9]+$  ]]; then
		echo -e "${red}[-] The port must be numerical.${reset}"
		exit
    fi
    if [ "$1" -gt 65535 ] || [ "$1" -lt 1 ]; then
        echo -e "${red}[-] The port is not valid (must be between 1-65535).${reset}"
        exit
    fi
    port=$1
}

checkfile(){
	if ! [ -f $(dirname $(realpath $0))/ovpn_files/$(basename $1) ];then
		echo -e "${red}[-] Your config file must be a file inside\n"$(dirname $(realpath $0))/ovpn_files".${reset}"
		exit
	fi
}

run_container(){
	if [[ ! "$1" && ! "$tor" == "yes" ]]; then
		echo -e "${red}[-] Choose a ovpn config file from ovpn_files with -f <filename.ovpn>, or use --run --tor to run with TOR Proxy.${reset}"
		exit
	fi

	if [[ "$1" == "--tor" || "$1" == "-t" ]]; then
		filename=empty
	fi

	random_string=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 5)

	docker_run=$(sudo docker run -dit \
	--cap-add=NET_ADMIN \
	--device /dev/net/tun \
	--sysctl net.ipv6.conf.all.disable_ipv6=0 \
	$(if [[ $tor == "yes" ]]; then echo "-p $tor_port:9050";else echo "-p $3:3128";fi) \
	$(if [[ $tor == "yes" ]]; then echo "--name tor_${random_string}";else echo "--name $2";fi)\
	-e OVPN_FILE=$(basename "$filename") \
	-e TOR_CONTAINER="$4" \
	-v $(dirname $(realpath "$0"))/ovpn_files:/ovpn \
	squid_openvpn:1.0 2>&1)

	if [ $? -eq 0 ]; then
		echo -e "${green}[+] Proxy server is running on ${white}127.0.0.1:"$(if [[ $tor == "yes" ]]; then echo "${tor_port}${green} with ${white}TOR"; else echo "$3${green} with ${white}$(basename $1)"; fi)${reset}
	else
		if [[ $(echo $docker_run | grep "Unable to find image") ]]; then
			echo -e "${red}[-] You have to build the docker image before running it. Use -b to build.${reset}"
			exit 7359
		fi

		container_id=$(sudo docker ps -a | grep Created | cut -d " " -f 1)
		if [[ $container_id ]]; then
			container_start=$(sudo docker container start "$container_id" 2>&1 > /dev/null)
		fi

		if [[ $(echo "$container_start" | grep "already allocated") ]]; then
			echo -e "${red}[-] Port already allocated. Choose another port with --port <port>.${reset}"
			sudo docker rm -f "$container_id" > /dev/null
			exit 7359
		fi
		echo -e "${red}[-] Couldn't run docker container.${reset}"
		exit 7359
	fi
}

build(){
	echo -e "${green}[*] Building the docker image... Be patient...${reset}"
	sudo docker build -t squid_openvpn:1.0 .
	if [ $? -eq 0 ]; then
		echo -e "${green}[+] Image built! Use $0 --run --file <ovpn file> to run with the selected file.${reset}"
	else
		echo -e "${red}[-] Could't build docker image...${reset}"
	fi
	exit
}

list_containers(){
	echo "CONTAINER ID	PORT	CREATED		STATUS		NAME"
	sudo docker ps -a  | grep "squid_openvpn" | sed -E "s/0.0.0.0:|->3128\/tcp//g" | sed -E "s/( {2,})/;/g" | awk -F';' '{ print $1 "\t" $6 "\t" $4 "\t" $5 "\t" $7 }'
}

start_container(){
	if [[ "$1" == "" ]]; then
		echo -e "${red}[-] You need to insert the name of the container.${reset}\nUse ${white}$0 --list${reset} to see the container names"
		exit
	fi
	sudo docker container start "$1"
	exit
}

stop_container(){
	if [[ "$1" == "" ]]; then
		echo -e "${red}[-] You need to insert the name of the container.${reset}\nUse ${white}$0 --list${reset} to see the container names"
	fi
	sudo docker container stop "$1"
	exit
}

delete_container(){
	if [[ "$1" == "" ]]; then
		echo -e "${red}[-] Container name cannot be empty. ${reset}\nUse ${white}$0 --list${reset} to see the container names"
		exit
	fi
	sudo docker rm -f "$1"
}

while [ "$1" != "" ]; do
    case $1 in
        -b | --build ) build
            shift ;;

        -p | --port )
            shift
            port="$1"
            tor_port="$1"
            checkport "$port" ;;

        -h | --help ) help_banner ;;

        -n | --name )
        	shift
        	name="$1" ;;

        -r | --run )
        	shift
        	filename="$1"
        	if [[ "$filename" == "--tor" || "$filename" == "-t" ]]; then
				tor=yes
        	fi
        	run=1 ;;

        -t | --tor )
        	tor=yes ;;

        -l | --list )
        	list=1 ;;

		-d | --delete )
			shift
			delete_container "$1" ;;

        --start )
        	shift
        	start_container "$1" ;;

        --stop )
        	shift
        	stop_container "$1" ;;

        * ) echo -e "${red}[-] Invalid option. Use -h for help.${reset}"
            exit 1 ;;
    esac
    shift
done

if [[ $run ]]; then
	if [[ $tor != "yes" ]]; then
		checkfile "$filename"
	fi
	run_container "$filename" "$name" "$port" "$tor" "$tor_port"
	exit
elif [[ $list ]]; then
	list_containers
elif [[ "$1" == "" ]]; then
	echo -e " - Build image:\n$0 --build\n\n - Run container:\n$0 --run <OPENVPN FILE> [--port <PORT>] [--name <CONTAINER NAME>]\n\nFor more information, use --help"
else
	echo -e "${orange}[!] If you want to run the container, use --run.${reset}"
fi  
